/*****************************************************************
 * [문자열 클래스 다루기]
 * String 클래스 주요 매서드
 *  - Compare       : 지역 설정을 바탕으로 입력된 문자열을 비교
 *  - Format        : 문자열의 포맷을 지정해 출력하는 satatic 매서드
 *  - IndexOf       : 문자열의 앞머리부터 주어진 문자열을 찾아 위치 반환
 *  - LastIndexOf   : 문자열의 뒤부터 주어진 문자열을 찾아 위치를 반환
 *  - PadLeft       : 어떤 문자를 지정된 횟수만큼 반복해 문자열의 앞에 추가
 *  - PadRight      : 어떤 문자를 지정된 횟수만큼 반복해 문자열의 뒤에 추가
 *  - Replace       : 문자열 내의 특정 문자/문자열을 다른 문자/문자열로 교채
 *  - Split         : 주어진 문자가 나타나는 곳을 찾아 토큰 문자배열 생성
 *  - SubString     : 문자열의 주어진 위치에서 시작하는 부분 문자열 반환
 *****************************************************************/
using System;
using System.Text;
class StringExam5
{
    static void Main()
    {
        StringBuilder sb = new StringBuilder("www.daum.net", 25);  // 문자열 생성
        sb.Capacity = 20;      // StringBuilder의 용량을 20으로 축소

        Console.WriteLine(sb.ToString());    // 화면에 문자열 출력
        Console.WriteLine("Capacity    : {0}", sb.Capacity);  // 문자열 용량 출력
        Console.WriteLine("MaxCapacity : {0}", sb.MaxCapacity); // 최대 용량 출력
        Console.WriteLine("Length      : {0}", sb.Length);   // 문자열 길이 출력

        sb.Append(" 홈페이지 ");                   // 문자열 추가하기
        sb.AppendFormat("{0}{1}", "입니다.", "!");  // 형식화를 이용한 문자열 추가
        Console.WriteLine(sb.ToString());          // 문자열 출력하기
        Console.WriteLine("Capacity    : {0}", sb.Capacity); // 문자열 용량 출력
        Console.WriteLine("Length      : {0}", sb.Length);  // 문자열 길이 출력

        sb.Replace("홈페이지", "사이트");      // “홈페이지” 문자열을 찾아 “사이트”로 교체
        sb.Insert(0, "http://");                 // 문자열 첫머리에 “http://" 추가
        Console.WriteLine(sb.ToString());     // 문자열 출력하기
        Console.WriteLine(sb.ToString().ToUpper());  // 모든 문자를 대문자로 변환

        sb.Remove(25, sb.Length - 25);       // 25번째 문자부터 끝까지 삭제      
        Console.WriteLine(sb.ToString());      // 문자열 출력
    }
}
