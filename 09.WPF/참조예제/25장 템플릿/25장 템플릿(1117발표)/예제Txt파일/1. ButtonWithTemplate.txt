<!-- =====================================================
      ButtonWithTemplate.xaml (c) 2006 by Charles Petzold 
     ===================================================== -->
<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Button HorizontalAlignment="Center" VerticalAlignment="Center"
            FontSize="48" Padding="20">
	//버튼 Content==============
        Button with Custom Template
	//==========================
        <Button.Template>
            <ControlTemplate>

                <!-- VisualTree property of ControlTemplate. -->

                <Border Name="border" BorderThickness="3" BorderBrush="Red"
                        Background="{DynamicResource 
                            {x:Static SystemColors.ControlLightBrushKey}}">
                    <TextBlock
                        Name="txtblk" 
                        FontStyle="Italic"
			//버튼 Content를 TextBlock의 Text에 바인딩 
                        Text="{TemplateBinding Button.Content}"
			//TemplateBinding 인자는 반드시 의존 프로퍼티여야 함
                        Margin="{TemplateBinding Control.Padding}" />
                </Border>
		//===================================================================
		//VisualTree는 Border엘리먼트로 많이 시작하지만 실제로는 패널 종류나 
		//TextBlock과 같은 단독 엘리먼트로도 설정 가능
		//===================================================================
                <!-- Triggers property of ControlTemplate. -->
		//ControlTemplate의 Triggers프로퍼티(Trigger 객체의 컬렉션)====
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter TargetName="border"
                                Property="Border.CornerRadius" Value="24" />
                        <Setter TargetName="txtblk"
                                Property="TextBlock.FontWeight" Value="Bold" />
                    </Trigger>

                    <Trigger Property="Button.IsPressed" Value="True">
                        <Setter 
                            TargetName="border"
                            Property="Border.Background"
                            Value="{DynamicResource 
                                {x:Static SystemColors.ControlDarkBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
		//================================================================
            </ControlTemplate>
        </Button.Template>
    </Button>
</Page>